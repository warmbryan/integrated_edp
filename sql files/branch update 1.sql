/*
Deployment script for C:\USERS\BRYAN\DESKTOP\SRC\EDP_PROJECT\APP_DATA\MYDB.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\BRYAN\DESKTOP\SRC\EDP_PROJECT\APP_DATA\MYDB.MDF"
:setvar DefaultFilePrefix "C_\USERS\BRYAN\DESKTOP\SRC\EDP_PROJECT\APP_DATA\MYDB.MDF_"
:setvar DefaultDataPath "C:\Users\bryan\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\bryan\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Rename [dbo].[Branch].[shopName] to name';


GO
EXECUTE sp_rename @objname = N'[dbo].[Branch].[shopName]', @newname = N'name', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename [dbo].[Branch].[phoneNumber] to phone';


GO
EXECUTE sp_rename @objname = N'[dbo].[Branch].[phoneNumber]', @newname = N'phone', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename [dbo].[Branch].[branchLocation] to address';


GO
EXECUTE sp_rename @objname = N'[dbo].[Branch].[branchLocation]', @newname = N'address', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename [dbo].[Branch].[branchAddress] to address2';


GO
EXECUTE sp_rename @objname = N'[dbo].[Branch].[branchAddress]', @newname = N'address2', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Branch].[postal] (SqlSimpleColumn) will not be renamed to zip';


GO
PRINT N'Dropping unnamed constraint on [dbo].[Branch]...';


GO
ALTER TABLE [dbo].[Branch] DROP CONSTRAINT [CK__Branch__mainBran__37A5467C];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Rename [dbo].[Branch].[mainBranch] to isMainBranch';


GO
EXECUTE sp_rename @objname = N'[dbo].[Branch].[mainBranch]', @newname = N'isMainBranch', @objtype = N'COLUMN';


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping unnamed constraint on [dbo].[Branch]...';


GO
ALTER TABLE [dbo].[Branch] DROP CONSTRAINT [DF__Branch__id__35BCFE0A];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping unnamed constraint on [dbo].[Branch]...';


GO
ALTER TABLE [dbo].[Branch] DROP CONSTRAINT [DF__Branch__mainBran__36B12243];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[saStaffFK]...';


GO
ALTER TABLE [dbo].[Staff] DROP CONSTRAINT [saStaffFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[bpaBranchPhotoFK]...';


GO
ALTER TABLE [dbo].[BranchPhoto] DROP CONSTRAINT [bpaBranchPhotoFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[rbCustomerFK]...';


GO
ALTER TABLE [dbo].[Review] DROP CONSTRAINT [rbCustomerFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[abAppointmentFK]...';


GO
ALTER TABLE [dbo].[Appointment] DROP CONSTRAINT [abAppointmentFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[asaAppointmentSettingFK]...';


GO
ALTER TABLE [dbo].[AppointmentSetting] DROP CONSTRAINT [asaAppointmentSettingFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[vhbVistedHistoryFK]...';


GO
ALTER TABLE [dbo].[VisitedHistory] DROP CONSTRAINT [vhbVistedHistoryFK];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
/*
The column [dbo].[Branch].[country] on table [dbo].[Branch] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Branch].[zip] on table [dbo].[Branch] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column address2 in table [dbo].[Branch] is currently  VARCHAR (200) NOT NULL but is being changed to  VARCHAR (100) NULL. Data loss could occur.
*/
GO
PRINT N'Starting rebuilding table [dbo].[Branch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Branch] (
    [id]           UNIQUEIDENTIFIER DEFAULT (newsequentialid()) NOT NULL,
    [name]         VARCHAR (100)    NOT NULL,
    [phone]        VARCHAR (15)     NOT NULL,
    [phone2]       VARCHAR (15)     NULL,
    [fax]          VARCHAR (15)     NULL,
    [email]        VARCHAR (100)    NOT NULL,
    [description]  VARCHAR (2000)   NULL,
    [country]      VARCHAR (30)     NOT NULL,
    [address]      VARCHAR (100)    NOT NULL,
    [address2]     VARCHAR (100)    NULL,
    [city]         VARCHAR (30)     NULL,
    [state]        VARCHAR (30)     NULL,
    [zip]          VARCHAR (15)     NOT NULL,
    [isMainBranch] BIT              DEFAULT ((0)) NOT NULL,
    [businessId]   UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Branch])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Branch] ([id], [name], [phone], [email], [description], [address], [address2], [isMainBranch], [businessId])
        SELECT   [id],
                 [name],
                 [phone],
                 [email],
                 [description],
                 [address],
                 [address2],
                 [isMainBranch],
                 [businessId]
        FROM     [dbo].[Branch]
        ORDER BY [id] ASC;
    END

DROP TABLE [dbo].[Branch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Branch]', N'Branch';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[saStaffFK]...';


GO
ALTER TABLE [dbo].[Staff] WITH NOCHECK
    ADD CONSTRAINT [saStaffFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[bpaBranchPhotoFK]...';


GO
ALTER TABLE [dbo].[BranchPhoto] WITH NOCHECK
    ADD CONSTRAINT [bpaBranchPhotoFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[rbCustomerFK]...';


GO
ALTER TABLE [dbo].[Review] WITH NOCHECK
    ADD CONSTRAINT [rbCustomerFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[abAppointmentFK]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD CONSTRAINT [abAppointmentFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[asaAppointmentSettingFK]...';


GO
ALTER TABLE [dbo].[AppointmentSetting] WITH NOCHECK
    ADD CONSTRAINT [asaAppointmentSettingFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[vhbVistedHistoryFK]...';


GO
ALTER TABLE [dbo].[VisitedHistory] WITH NOCHECK
    ADD CONSTRAINT [vhbVistedHistoryFK] FOREIGN KEY ([branchId]) REFERENCES [dbo].[Branch] ([id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating unnamed constraint on [dbo].[Branch]...';


GO
ALTER TABLE [dbo].[Branch] WITH NOCHECK
    ADD CHECK ([isMainBranch]=(1) OR [isMainBranch]=(0));


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Staff] WITH CHECK CHECK CONSTRAINT [saStaffFK];

ALTER TABLE [dbo].[BranchPhoto] WITH CHECK CHECK CONSTRAINT [bpaBranchPhotoFK];

ALTER TABLE [dbo].[Review] WITH CHECK CHECK CONSTRAINT [rbCustomerFK];

ALTER TABLE [dbo].[Appointment] WITH CHECK CHECK CONSTRAINT [abAppointmentFK];

ALTER TABLE [dbo].[AppointmentSetting] WITH CHECK CHECK CONSTRAINT [asaAppointmentSettingFK];

ALTER TABLE [dbo].[VisitedHistory] WITH CHECK CHECK CONSTRAINT [vhbVistedHistoryFK];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Branch'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
